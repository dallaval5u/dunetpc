#include "standard_detsim_dune10kt_1x2x6_legacy.fcl"

process_name: PrimSim

services: @local::dunefd_simulation_services
services.TFileService: { fileName: "detsim_hist.root" }
services.TimeTracker:       {}
services.MemoryTracker:         { } # default is one
services.RandomNumberGenerator: {} #ART native random number generator
// services.FileCatalogMetadata:  @local::art_file_catalog_mc
services.NuRandomService:       @local::standard_NuRandomService  # seedservice.fcl

#source is now a root file
source: {
  module_type: RootInput
  maxEvents:  10        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics: {
 producers: {
   simwire: {
         module_type: "SimWireDUNE"
         SimChannelLabel: "largeant"
         NoiseOn: true
         PedestalOn: true
         DistortOn: false
         SuppressOn: false
         KeepEmptyChannels: true
         AdcSimulator:      "adcsim_ideal"
      }

   trigprim: {
         module_type: "TriggerPrimitiveFinder"
         InputTag: "simwire"
   }
   rns:            { module_type: "RandomNumberSaver" }

   
 }
 simulate: [ rns, simwire, trigprim ]
 stream1:  [ out1 ]
 trigger_paths: [simulate] 
 end_paths:     [stream1]  
}

outputs: {
   out1: {
      module_type: RootOutput
      fileName:    "%ifb_trigprim.root"
      dataTier:    "detector-simulated"
      compressionLevel: 1
      # Remove all the rawdigits, since they're huge and entirely noise
      # Get rid of any reco information that might have been in the input file too
      #
      # Form of the string is:
      # data product type _ module label _ instance _ process name
      outputCommands: ["keep *_*_*_*", "drop *_simwire__PrimSim", "drop *_daq__NoZSDetsim", "drop *_*__Reco" ]
      
   }
}

# DetSim services. These are used by SimWire to add noise and
# pedestals to the incoming (noise-free) waveforms
services.SimChannelExtractService: @local::scxgeneric
services.ChannelNoiseService: @local::chnoiseold
services.PedestalAdditionService: @local::padprovided
services.AdcDistortService: @local::stuckbits
services.AdcSuppressService: @local::zsnone
services.AdcCompressService: @local::cmpreplace
services.DetPedestalService: @local::dune_fixedpeds

# The name of the trigger primitive finder implementation to use
#  (replace this with your own)
services.TriggerPrimitiveFinderService: {
   service_provider: "TriggerPrimitiveFinderPass1"
   Threshold: 20
}